
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.listofreposgithub"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    androidExtensions {
        experimental = true
    }

    dataBinding {
        enabled = true
    }

    dynamicFeatures = [":details"]

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'com.google.android.play:core:1.6.3'

    // support libraries
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    // Android KTX
    implementation 'androidx.core:core-ktx:1.1.0'

    // constraint layout
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "com.github.bumptech.glide:glide:4.9.0"

    // navigation
    def nav_version = "1.0.0"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.0.0-rc02'
    implementation 'androidx.navigation:navigation-ui-ktx:2.0.0-rc02'

    // coroutines
    def coroutines = "1.0.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    implementation 'com.google.android.material:material:1.1.0-alpha09'

    // retrofit for networking
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
  //implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    // retrofit for networking
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.squareup.retrofit2:converter-moshi:2.5.0'

    // moshi for parsing the JSON format
    def moshi_version = "1.8.0"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // arch components
    // ViewModel and LiveData
    def lifecycle_version = "2.2.0-alpha05"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Room dependency
    def room_version = "2.2.0-rc01"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation 'androidx.arch.core:core-testing:2.0.0'
    implementation "androidx.test.espresso:espresso-contrib:3.1.1"
    implementation "androidx.test.espresso:espresso-core:3.1.1"
    implementation "androidx.test.espresso:espresso-intents:3.1.1"
    implementation "androidx.test.ext:junit:1.1.0"
    implementation "androidx.work:work-testing:2.1.0"
    implementation  "junit:junit:4.12"
}